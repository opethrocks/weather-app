{"remainingRequest":"/Users/matt/projects/vue-weather-app/node_modules/babel-loader/lib/index.js!/Users/matt/projects/vue-weather-app/node_modules/eslint-loader/index.js??ref--13-0!/Users/matt/projects/vue-weather-app/src/store/index.js","dependencies":[{"path":"/Users/matt/projects/vue-weather-app/src/store/index.js","mtime":1597694006582},{"path":"/Users/matt/projects/vue-weather-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IFZ1ZXggZnJvbSAndnVleCc7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7ClZ1ZS51c2UoVnVleCk7CmV4cG9ydCBkZWZhdWx0IG5ldyBWdWV4LlN0b3JlKHsKICBzdGF0ZTogewogICAgd2VhdGhlckRhdGE6IFtdCiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIEFERF9XRUFUSEVSX0RBVEE6IGZ1bmN0aW9uIEFERF9XRUFUSEVSX0RBVEEoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgdmFyIGRhdGEgPSBwYXlsb2FkOwogICAgICBzdGF0ZS53ZWF0aGVyRGF0YS5wdXNoKGRhdGEpOwogICAgfSwKICAgIFJFTU9WRV9XRUFUSEVSX0RBVEE6IGZ1bmN0aW9uIFJFTU9WRV9XRUFUSEVSX0RBVEEoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUud2VhdGhlckRhdGEgPSBzdGF0ZS53ZWF0aGVyRGF0YS5maWx0ZXIoZnVuY3Rpb24gKG9iaikgewogICAgICAgIHJldHVybiBvYmoubmFtZSAhPSBwYXlsb2FkOwogICAgICB9KTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGdldFdlYXRoZXJEYXRhOiBmdW5jdGlvbiBnZXRXZWF0aGVyRGF0YShfcmVmLCBwYXlsb2FkKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgdmFyIGNpdHkgPSBlbmNvZGVVUklDb21wb25lbnQocGF5bG9hZCk7CiAgICAgIGF4aW9zKHsKICAgICAgICBtZXRob2Q6ICdHRVQnLAogICAgICAgIHVybDogImh0dHBzOi8vY29tbXVuaXR5LW9wZW4td2VhdGhlci1tYXAucC5yYXBpZGFwaS5jb20vd2VhdGhlcj9xPSIuY29uY2F0KGNpdHkpLAogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJywKICAgICAgICAgICd4LXJhcGlkYXBpLWhvc3QnOiAnY29tbXVuaXR5LW9wZW4td2VhdGhlci1tYXAucC5yYXBpZGFwaS5jb20nLAogICAgICAgICAgJ3gtcmFwaWRhcGkta2V5JzogJ2JkZTAzMTI0ZGVtc2g0OWRiMTNlMTFiNTNjYWVwMTg4NGQwanNuYjc3MWJhN2I5ZWUzJywKICAgICAgICAgIHVzZVF1ZXJ5U3RyaW5nOiB0cnVlCiAgICAgICAgfSwKICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgIGNhbGxiYWNrOiAnJywKICAgICAgICAgIGlkOiAnMjE3Mjc5NycsCiAgICAgICAgICB1bml0czogJ2ltcGVyaWFsJywKICAgICAgICAgIG1vZGU6ICd4bWwlMkMgaHRtbCcKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29tbWl0KCdBRERfV0VBVEhFUl9EQVRBJywgcmVzcG9uc2UuZGF0YSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGFsZXJ0KGVycm9yKTsKICAgICAgfSk7CiAgICB9LAogICAgZGVsZXRlQ2l0eTogZnVuY3Rpb24gZGVsZXRlQ2l0eShfcmVmMiwgcGF5bG9hZCkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICBjb21taXQoJ1JFTU9WRV9XRUFUSEVSX0RBVEEnLCBwYXlsb2FkKTsKICAgIH0KICB9LAogIGdldHRlcnM6IHsKICAgIHdlYXRoZXJGb3JlY2FzdDogZnVuY3Rpb24gd2VhdGhlckZvcmVjYXN0KHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS53ZWF0aGVyRGF0YTsKICAgIH0KICB9Cn0pOw=="},{"version":3,"sources":["/Users/matt/projects/vue-weather-app/src/store/index.js"],"names":["Vue","Vuex","axios","use","Store","state","weatherData","mutations","ADD_WEATHER_DATA","payload","data","push","REMOVE_WEATHER_DATA","filter","obj","name","actions","getWeatherData","commit","city","encodeURIComponent","method","url","headers","useQueryString","params","callback","id","units","mode","then","response","catch","error","alert","deleteCity","getters","weatherForecast"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACG,KAAT,CAAe;AAC7BC,EAAAA,KAAK,EAAE;AACNC,IAAAA,WAAW,EAAE;AADP,GADsB;AAI7BC,EAAAA,SAAS,EAAE;AACVC,IAAAA,gBADU,4BACOH,KADP,EACcI,OADd,EACuB;AAChC,UAAIC,IAAI,GAAGD,OAAX;AACAJ,MAAAA,KAAK,CAACC,WAAN,CAAkBK,IAAlB,CAAuBD,IAAvB;AACA,KAJS;AAKVE,IAAAA,mBALU,+BAKUP,KALV,EAKiBI,OALjB,EAK0B;AACnCJ,MAAAA,KAAK,CAACC,WAAN,GAAoBD,KAAK,CAACC,WAAN,CAAkBO,MAAlB,CACnB,UAACC,GAAD;AAAA,eAASA,GAAG,CAACC,IAAJ,IAAYN,OAArB;AAAA,OADmB,CAApB;AAGA;AATS,GAJkB;AAe7BO,EAAAA,OAAO,EAAE;AACRC,IAAAA,cADQ,gCACmBR,OADnB,EAC4B;AAAA,UAAnBS,MAAmB,QAAnBA,MAAmB;AACnC,UAAIC,IAAI,GAAGC,kBAAkB,CAACX,OAAD,CAA7B;AACAP,MAAAA,KAAK,CAAC;AACLmB,QAAAA,MAAM,EAAE,KADH;AAELC,QAAAA,GAAG,wEAAiEH,IAAjE,CAFE;AAGLI,QAAAA,OAAO,EAAE;AACR,0BAAgB,0BADR;AAER,6BAAmB,2CAFX;AAGR,4BACC,oDAJO;AAKRC,UAAAA,cAAc,EAAE;AALR,SAHJ;AAULC,QAAAA,MAAM,EAAE;AACPC,UAAAA,QAAQ,EAAE,EADH;AAEPC,UAAAA,EAAE,EAAE,SAFG;AAGPC,UAAAA,KAAK,EAAE,UAHA;AAIPC,UAAAA,IAAI,EAAE;AAJC;AAVH,OAAD,CAAL,CAiBEC,IAjBF,CAiBO,UAACC,QAAD,EAAc;AACnBb,QAAAA,MAAM,CAAC,kBAAD,EAAqBa,QAAQ,CAACrB,IAA9B,CAAN;AACA,OAnBF,EAoBEsB,KApBF,CAoBQ,UAACC,KAAD,EAAW;AACjBC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACA,OAtBF;AAuBA,KA1BO;AA2BRE,IAAAA,UA3BQ,6BA2Be1B,OA3Bf,EA2BwB;AAAA,UAAnBS,MAAmB,SAAnBA,MAAmB;AAC/BA,MAAAA,MAAM,CAAC,qBAAD,EAAwBT,OAAxB,CAAN;AACA;AA7BO,GAfoB;AA+C7B2B,EAAAA,OAAO,EAAE;AACRC,IAAAA,eAAe,EAAE,yBAAChC,KAAD;AAAA,aAAWA,KAAK,CAACC,WAAjB;AAAA;AADT;AA/CoB,CAAf,CAAf","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n\tstate: {\n\t\tweatherData: []\n\t},\n\tmutations: {\n\t\tADD_WEATHER_DATA(state, payload) {\n\t\t\tlet data = payload;\n\t\t\tstate.weatherData.push(data);\n\t\t},\n\t\tREMOVE_WEATHER_DATA(state, payload) {\n\t\t\tstate.weatherData = state.weatherData.filter(\n\t\t\t\t(obj) => obj.name != payload\n\t\t\t);\n\t\t}\n\t},\n\tactions: {\n\t\tgetWeatherData({ commit }, payload) {\n\t\t\tlet city = encodeURIComponent(payload);\n\t\t\taxios({\n\t\t\t\tmethod: 'GET',\n\t\t\t\turl: `https://community-open-weather-map.p.rapidapi.com/weather?q=${city}`,\n\t\t\t\theaders: {\n\t\t\t\t\t'content-type': 'application/octet-stream',\n\t\t\t\t\t'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com',\n\t\t\t\t\t'x-rapidapi-key':\n\t\t\t\t\t\t'bde03124demsh49db13e11b53caep1884d0jsnb771ba7b9ee3',\n\t\t\t\t\tuseQueryString: true\n\t\t\t\t},\n\t\t\t\tparams: {\n\t\t\t\t\tcallback: '',\n\t\t\t\t\tid: '2172797',\n\t\t\t\t\tunits: 'imperial',\n\t\t\t\t\tmode: 'xml%2C html'\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tcommit('ADD_WEATHER_DATA', response.data);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\talert(error);\n\t\t\t\t});\n\t\t},\n\t\tdeleteCity({ commit }, payload) {\n\t\t\tcommit('REMOVE_WEATHER_DATA', payload);\n\t\t}\n\t},\n\n\tgetters: {\n\t\tweatherForecast: (state) => state.weatherData\n\t}\n});\n"]}]}