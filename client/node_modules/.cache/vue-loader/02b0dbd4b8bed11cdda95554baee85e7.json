{"remainingRequest":"/Users/matt/projects/vue-weather-app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/matt/projects/vue-weather-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/matt/projects/vue-weather-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/matt/projects/vue-weather-app/src/components/CurrentConditions.vue?vue&type=template&id=760e2c91&scoped=true&","dependencies":[{"path":"/Users/matt/projects/vue-weather-app/src/components/CurrentConditions.vue","mtime":1601406178113},{"path":"/Users/matt/projects/vue-weather-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}