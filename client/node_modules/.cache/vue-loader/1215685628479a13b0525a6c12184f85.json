{"remainingRequest":"/Users/matt/projects/vue-weather-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/matt/projects/vue-weather-app/src/components/Forecast.vue?vue&type=style&index=0&id=118e74ab&scoped=true&lang=css&","dependencies":[{"path":"/Users/matt/projects/vue-weather-app/src/components/Forecast.vue","mtime":1602687280805},{"path":"/Users/matt/projects/vue-weather-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZmxleC1jb250YWluZXIgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1mbG93OiByb3cgd3JhcDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDsKICBncmlkLXJvdy1nYXA6IDJlbTsKfQouZmxleC1pdGVtIHsKICBtYXJnaW46IDAuNzVlbTsKfQouYm94IHsKICBib3JkZXItcmFkaXVzOiAyZW07CiAgd2lkdGg6IDU3ZW07Cn0KLmJ1dHRvbiB7CiAgbWFyZ2luOiAxZW07Cn0KI2Rlc2NyaXB0aW9uIHsKICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTsKfQojaWNvbiB7CiAgZm9udC1zaXplOiA3NXB4Owp9CiNpY29uLWNvbG9yIHsKICBjb2xvcjogcmVkOwp9Cg=="},{"version":3,"sources":["Forecast.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Forecast.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <transition\n      name=\"bounce\"\n      enter-active-class=\"bounceInLeft\"\n      leave-active-class=\"bounceOutRight\"\n    >\n      <div v-if=\"isActive\">\n        <div class=\"box\">\n          <p class=\"label is-size-3 pt-3\" v-if=\"cityData[0].state\">\n            <font-awesome-icon icon=\"location-arrow\" />\n            {{ cityData[0].name }}, {{ cityData[0].state }}\n          </p>\n          <p class=\"label is-size-3 pt-3\" v-else>\n            <font-awesome-icon icon=\"location-arrow\" />\n            {{ cityData[0].name }}, {{ cityData[0].country }}\n          </p>\n          <div class=\"flex-container\">\n            <div v-for=\"forecast in getForecast\" :key=\"forecast.dt\">\n              <div\n                class=\"flex-item\"\n                v-for=\"weather in forecast.weather\"\n                :key=\"weather.id\"\n              >\n                <p class=\"has-text-weight-semibold is-size-5\" id=\"description\">\n                  {{ weather.description }}\n                </p>\n                <p class=\"has-text-weight-semibold is-size-5\" id=\"description\">\n                  <font-awesome-icon icon=\"thermometer-half\" />\n                  {{ Math.round(forecast.main.temp) }}{{ formatUnits }}\n                </p>\n                <div id=\"icon\">\n                  <i\n                    :style=\"{ color: randomColor() }\"\n                    :class=\"`wi wi-owm-${weather.icon}`\"\n                  ></i>\n                </div>\n\n                <p class=\"has-text-weight-semibold\">\n                  <font-awesome-icon icon=\"clock\" />\n                  {{ formatTime(forecast.dt_txt) }}\n                </p>\n                <p class=\"has-text-weight-semibold\">\n                  <font-awesome-icon icon=\"calendar-alt\" />\n                  {{ formatDate(forecast.dt_txt) }}\n                </p>\n              </div>\n            </div>\n          </div>\n          <button class=\"button is-link is-small\" @click=\"toggleConditions\">\n            Show Conditions\n          </button>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Forecast',\n  data() {\n    return {\n      units: null\n    };\n  },\n  props: {\n    isActive: {\n      type: Boolean,\n      default: () => {\n        false;\n      }\n    },\n    forecastWeather: {\n      type: Object,\n      default: () => {\n        null;\n      }\n    },\n    unitSelected: {\n      type: String,\n      default: () => {\n        '';\n      }\n    },\n    cityData: {\n      type: Array,\n      default: () => {\n        [];\n      }\n    }\n  },\n  methods: {\n    toggleConditions() {\n      this.$store.dispatch('toggleForecast');\n    },\n    randomColor() {\n      return '#' + (((1 << 24) * Math.random()) | 0).toString(16);\n    },\n    formatTime(time) {\n      return new Date(time).toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString([], {\n        month: '2-digit',\n        day: '2-digit'\n      });\n    }\n  },\n  computed: {\n    getForecast() {\n      return this.forecastWeather.list.filter((item, index) => index < 10);\n    },\n    getIcon() {\n      return this.forecastIcon.filter((item, index) => index < 10);\n    },\n    formatUnits() {\n      if (this.unitSelected === 'imperial') {\n        return '°F';\n      } else {\n        return '°C';\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.flex-container {\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-around;\n  grid-row-gap: 2em;\n}\n.flex-item {\n  margin: 0.75em;\n}\n.box {\n  border-radius: 2em;\n  width: 57em;\n}\n.button {\n  margin: 1em;\n}\n#description {\n  text-transform: capitalize;\n}\n#icon {\n  font-size: 75px;\n}\n#icon-color {\n  color: red;\n}\n</style>\n"]}]}