{"remainingRequest":"/Users/matt/projects/vue-weather-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/matt/projects/vue-weather-app/src/components/CurrentConditions.vue?vue&type=style&index=0&style=scoped&lang=css&","dependencies":[{"path":"/Users/matt/projects/vue-weather-app/src/components/CurrentConditions.vue","mtime":1600030787721},{"path":"/Users/matt/projects/vue-weather-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZmxleC1jb250YWluZXIgewoJZGlzcGxheTogZmxleDsKCWp1c3RpZnktY29udGVudDogY2VudGVyOwp9Ci5ib3ggewoJd2lkdGg6IDcwMHB4Owp9Ci5jYXBpdGFsaXplIHsKCXRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplOwp9CiNyb3VuZC1jb3JuZXJzIHsKCWJvcmRlci1yYWRpdXM6IDEwMHB4Owp9Cg=="},{"version":3,"sources":["CurrentConditions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CurrentConditions.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<div>\n\t\t<div class=\"flex-container\">\n\t\t\t<div class=\"box\" id=\"round-corners\" v-if=\"!isActive\">\n\t\t\t\t<p class=\"label is-size-3 pt-3\">\n\t\t\t\t\t<font-awesome-icon icon=\"location-arrow\" />\n\t\t\t\t\t{{ currentWeather.name }}, {{ currentWeather.sys.country }}\n\t\t\t\t</p>\n\n\t\t\t\t<p class=\"is-size-4 has-text-weight-semibold capitalize\">\n\t\t\t\t\t{{ getWeather[0].description }}\n\t\t\t\t</p>\n\t\t\t\t<p class=\"is-size-4 has-text-weight-semibold\">\n\t\t\t\t\t<font-awesome-icon icon=\"thermometer-half\" />\n\t\t\t\t\t{{ Math.round(currentWeather.main.temp) }}{{ formatUnits }}\n\t\t\t\t</p>\n\n\t\t\t\t<weather-icons\n\t\t\t\t\t:conditions=\"getWeather[0].main\"\n\t\t\t\t\t:description=\"getWeather[0].description\"\n\t\t\t\t\t:time=\"getWeather[0].icon\"\n\t\t\t\t\t:size=\"256\"\n\t\t\t\t\t:weather=\"getWeather\"\n\t\t\t\t/>\n\n\t\t\t\t<p class=\"has-text-weight-medium\">\n\t\t\t\t\t<font-awesome-icon icon=\"wind\" />\n\t\t\t\t\tWind: {{ Math.round(currentWeather.wind.speed) }} Mph\n\t\t\t\t</p>\n\t\t\t\t<p class=\"has-text-weight-medium\">\n\t\t\t\t\t<font-awesome-icon icon=\"water\" /> Humidity:\n\t\t\t\t\t{{ currentWeather.main.humidity }}%\n\t\t\t\t</p>\n\t\t\t\t<p class=\"has-text-weight-medium\">\n\t\t\t\t\t<font-awesome-icon icon=\"sun\" />\n\t\t\t\t\t<font-awesome-icon icon=\"long-arrow-alt-up\" />\n\t\t\t\t\tSunrise:\n\t\t\t\t\t{{\n\t\t\t\t\t\tnew Date(currentWeather.sys.sunrise * 1000).toLocaleTimeString([], {\n\t\t\t\t\t\t\thour: \"2-digit\",\n\t\t\t\t\t\t\tminute: \"2-digit\",\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t</p>\n\t\t\t\t<p class=\"pb-2 has-text-weight-medium\">\n\t\t\t\t\t<font-awesome-icon icon=\"sun\" />\n\t\t\t\t\t<font-awesome-icon icon=\"long-arrow-alt-down\" />\n\t\t\t\t\tSunset:\n\t\t\t\t\t{{\n\t\t\t\t\t\tnew Date(currentWeather.sys.sunset * 1000).toLocaleTimeString([], {\n\t\t\t\t\t\t\thour: \"2-digit\",\n\t\t\t\t\t\t\tminute: \"2-digit\",\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t</p>\n\t\t\t\t<button\n\t\t\t\t\tclass=\"button is-rounded is-link is-small\"\n\t\t\t\t\t@click=\"toggleForecast\"\n\t\t\t\t>\n\t\t\t\t\tShow Forecast\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<forecast\n\t\t\t\t:isActive=\"isActive\"\n\t\t\t\t:forecastWeather=\"forecastWeather\"\n\t\t\t\t:unitSelected=\"unitSelected\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport WeatherIcons from \"./WeatherIcons.vue\";\nimport Forecast from \"./Forecast.vue\";\n\nexport default {\n\tname: \"CurrentConditions\",\n\tcomponents: {\n\t\tWeatherIcons,\n\t\tForecast,\n\t},\n\tprops: {\n\t\tisActive: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: () => {\n\t\t\t\tfalse;\n\t\t\t},\n\t\t},\n\t\tforecastWeather: {\n\t\t\ttype: Object,\n\t\t\tdefault: () => {},\n\t\t},\n\t\tcurrentWeather: {\n\t\t\ttype: Object,\n\t\t\tdefault: () => {},\n\t\t},\n\t\tunitSelected: {\n\t\t\ttype: String,\n\t\t\tdefault: () => \"\",\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tvisible: true,\n\t\t};\n\t},\n\n\tmethods: {\n\t\ttoggleForecast() {\n\t\t\tthis.$store.dispatch(\"toggleForecast\");\n\t\t},\n\t},\n\tcomputed: {\n\t\tformatUnits() {\n\t\t\tif (this.unitSelected === \"imperial\") {\n\t\t\t\treturn \"°F\";\n\t\t\t} else {\n\t\t\t\treturn \"°C\";\n\t\t\t}\n\t\t},\n\t\tgetWeather() {\n\t\t\treturn this.currentWeather.weather.map((item) => item);\n\t\t},\n\t\tgetForecast() {\n\t\t\treturn this.forecastWeather.list;\n\t\t},\n\t},\n};\n</script>\n\n<style style=\"scoped\">\n.flex-container {\n\tdisplay: flex;\n\tjustify-content: center;\n}\n.box {\n\twidth: 700px;\n}\n.capitalize {\n\ttext-transform: capitalize;\n}\n#round-corners {\n\tborder-radius: 100px;\n}\n</style>\n"]}]}