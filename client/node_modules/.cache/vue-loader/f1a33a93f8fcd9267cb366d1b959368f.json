{"remainingRequest":"/Users/matt/projects/vue-weather-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/matt/projects/vue-weather-app/src/views/Home.vue?vue&type=style&index=0&id=fae5bece&scoped=true&lang=css&","dependencies":[{"path":"/Users/matt/projects/vue-weather-app/src/views/Home.vue","mtime":1600369170764},{"path":"/Users/matt/projects/vue-weather-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmZsZXgtY29udGFpbmVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGZsZXgtZmxvdzogcm93IHdyYXA7Cn0K"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div class=\"columns is-centered\">\n      <div class=\"column is-one-third\">\n        <div class=\"field\">\n          <div class=\"control has-icons-left has-icons-right\">\n            <input\n              class=\"input is-info is-rounded\"\n              type=\"text\"\n              placeholder=\"Search for a city\"\n              v-model=\"input\"\n            />\n            <span class=\"icon is-left\">\n              <font-awesome-icon icon=\"search\" />\n            </span>\n            <span class=\"icon is-right\">\n              <a class=\"delete is-small\" @click=\"clearForm\"></a>\n            </span>\n\n            <button\n              class=\"button is-rounded is-info is-small\"\n              style=\"margin-top: 1em; margin-right: 1em\"\n              @click=\"searchImperial\"\n            >\n              Imperial\n            </button>\n            <button\n              class=\"button is-rounded is-success is-small\"\n              style=\"margin-top: 1em\"\n              @click=\"searchMetric\"\n            >\n              Metric\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <current-conditions\n      :forecastWeather=\"weatherForecast\"\n      :currentWeather=\"currentWeather\"\n      :unitSelected=\"selectedUnit\"\n      :isActive=\"toggleForecast\"\n      :weatherIcon=\"weatherIcon\"\n      :forecastIcon=\"forecastIcon\"\n    />\n  </div>\n</template>\n\n<script>\nimport CurrentConditions from '@/components/CurrentConditions.vue';\nimport { mapGetters, mapActions } from 'vuex';\nimport * as data from '@/data/city.list.json';\n\nexport default {\n  name: 'Home',\n  components: {\n    CurrentConditions\n  },\n  data() {\n    return {\n      input: 'lake charles',\n      units: 'imperial',\n      cities: JSON.parse('city.list.json')\n    };\n  },\n  computed: {\n    ...mapGetters([\n      'currentWeather',\n      'weatherForecast',\n      'selectedUnit',\n      'toggleForecast',\n      'weatherIcon',\n      'forecastIcon'\n    ])\n  },\n  methods: {\n    ...mapActions(['currentWeather', 'weatherForecast']),\n    ...mapActions({\n      weather: 'currentWeather',\n      forecast: 'weatherForecast'\n    }),\n    searchImperial() {\n      this.units = 'imperial';\n      this.weather({\n        city: this.input,\n        unit: this.units\n      });\n      this.forecast({\n        city: this.input,\n        unit: this.units\n      });\n      this.input = '';\n    },\n    searchMetric() {\n      this.units = 'metric';\n      this.weather({\n        city: this.input,\n        unit: this.units\n      });\n      this.forecast({\n        city: this.input,\n        unit: this.units\n      });\n      this.input = '';\n    },\n    clearForm() {\n      this.input = null;\n    }\n  },\n\n  created() {\n    this.units = 'imperial';\n    this.weather({\n      city: this.input,\n      unit: this.units\n    });\n    this.forecast({\n      city: this.input,\n      unit: this.units\n    });\n    this.input = '';\n  }\n};\n</script>\n\n<style scoped>\n.flex-container {\n  display: flex;\n  justify-content: center;\n  flex-flow: row wrap;\n}\n</style>\n"]}]}