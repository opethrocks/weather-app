{"remainingRequest":"/Users/matt/projects/vue-weather-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/matt/projects/vue-weather-app/src/views/Home.vue?vue&type=style&index=0&id=fae5bece&scoped=true&lang=css&","dependencies":[{"path":"/Users/matt/projects/vue-weather-app/src/views/Home.vue","mtime":1602687106447},{"path":"/Users/matt/projects/vue-weather-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matt/projects/vue-weather-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5mbGV4LWNvbnRhaW5lciB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKfQojaW5wdXQgewogIG1hcmdpbjogMC41ZW07Cn0KLmRyb3Bkb3duLWNvbnRhaW5lciB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBtYXJnaW46IDFlbTsKfQojZHJvcGRvd24tZmxleCB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIG92ZXJmbG93LXk6IGF1dG87CiAgaGVpZ2h0OiA0MGVtOwp9CiNpY29uIHsKICBwYWRkaW5nLWxlZnQ6IDAuNWVtOwp9Cg=="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div class=\"dropdown-container\">\n      <div\n        class=\"dropdown is-left\"\n        :class=\"{ 'is-active': activeStateDropdown }\"\n        @click=\"toggleStateDropdown\"\n      >\n        <div class=\"dropdown-trigger\">\n          <button\n            class=\"button\"\n            aria-haspopup=\"true\"\n            aria-controls=\"dropdown-menu3\"\n          >\n            <span>{{ stateCase(stateDropdownText) }}</span>\n            <span class=\"icon is-right\" id=\"icon\">\n              <i class=\"fa fa-angle-down\"></i>\n            </span>\n          </button>\n        </div>\n        <div class=\"dropdown-menu\" id=\"dropdown-menu3\" role=\"menu\">\n          <div class=\"dropdown-content\" id=\"dropdown-flex\">\n            <a\n              href=\"#\"\n              class=\"dropdown-item\"\n              :class=\"{ 'is-active': state.isActive }\"\n              v-for=\"state in states\"\n              :key=\"state.name\"\n              @click=\"selectStateDropdownItem(state)\"\n            >\n              {{ stateCase(state.name) }}\n            </a>\n          </div>\n        </div>\n      </div>\n      <h3 class=\"pl-2 pr-2 pt-1 is-size-5 has-text-weight-semibold\">OR</h3>\n\n      <div\n        class=\"dropdown is-right\"\n        :class=\"{ 'is-active': activeCountryDropdown }\"\n        @click=\"toggleCountryDropdown\"\n      >\n        <div class=\"dropdown-trigger\">\n          <button\n            class=\"button\"\n            aria-haspopup=\"true\"\n            aria-controls=\"dropdown-menu3\"\n          >\n            <span>{{ countryDropdownText }}</span>\n            <span class=\"icon is-right\" id=\"icon\">\n              <i class=\"fa fa-angle-down\"></i>\n            </span>\n          </button>\n        </div>\n        <div class=\"dropdown-menu\" id=\"dropdown-menu3\" role=\"menu\">\n          <div class=\"dropdown-content\" id=\"dropdown-flex\">\n            <a\n              href=\"#\"\n              class=\"dropdown-item\"\n              :class=\"{ 'is-active': country.isActive }\"\n              v-for=\"country in countries\"\n              :key=\"country.name\"\n              @click=\"selectCountryDropdownItem(country)\"\n            >\n              {{ country.name }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"flex-container\">\n      <div class=\"field\" id=\"input\">\n        <div class=\"control has-icons-left has-icons-right\">\n          <input\n            class=\"input is-info is-focused\"\n            type=\"text\"\n            placeholder=\"Search for city\"\n            v-model.lazy=\"input\"\n            @keyup.enter=\"searchImperial\"\n          />\n          <span class=\"icon is-left\">\n            <font-awesome-icon icon=\"search\" />\n          </span>\n          <span class=\"icon is-right\">\n            <a class=\"delete is-small\" @click=\"clearCity\"></a>\n          </span>\n        </div>\n      </div>\n    </div>\n    <div class=\"flex-container\">\n      <button\n        class=\"button is-info is-small\"\n        style=\"margin-top: 1em; margin-right: 1em\"\n        @click=\"searchImperial\"\n      >\n        Imperial\n      </button>\n      <button\n        class=\"button is-success is-small\"\n        style=\"margin-top: 1em\"\n        @click=\"searchMetric\"\n      >\n        Metric\n      </button>\n    </div>\n    <br />\n    <transition name=\"fade\">\n      <div v-if=\"currentWeather\">\n        <current-conditions\n          :forecastWeather=\"weatherForecast\"\n          :currentWeather=\"currentWeather\"\n          :unitSelected=\"selectedUnit\"\n          :isActive=\"toggleForecast\"\n          :cityData=\"currentCity.data\"\n        />\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport CurrentConditions from '@/components/CurrentConditions.vue';\nimport { mapGetters, mapActions } from 'vuex';\nimport worldCountries from '../../public/countries.js';\nimport states from '../../public/states.js';\n\nexport default {\n  name: 'Home',\n  components: {\n    CurrentConditions\n  },\n  data() {\n    return {\n      input: null,\n      state: null,\n      country: null,\n      city: null,\n      units: null,\n      cityCode: null,\n      countries: worldCountries,\n      states: states,\n      activeStateDropdown: false,\n      activeCountryDropdown: false,\n      stateDropdownText: 'Select State',\n      countryDropdownText: 'Select Country'\n    };\n  },\n  computed: {\n    getCityCode() {\n      return this.currentCity.data.map((obj) => obj.id);\n    },\n    getCityCoords() {\n      return this.currentCity.data.map((obj) => obj.coord);\n    },\n    ...mapGetters([\n      'currentWeather',\n      'weatherForecast',\n      'selectedUnit',\n      'toggleForecast',\n      'currentCity'\n    ])\n  },\n  methods: {\n    ...mapActions(['currentWeather', 'weatherForecast', 'addCity']),\n    ...mapActions({\n      weather: 'currentWeather',\n      forecast: 'weatherForecast',\n      addCity: 'addCity'\n    }),\n\n    searchImperial() {\n      let str = this.input\n        .toLowerCase()\n        .split(' ')\n        .map((word) => word[0].toUpperCase() + word.substr(1))\n        .join(' ');\n      this.city = str;\n      this.units = 'imperial';\n\n      this.addCity({\n        city: this.city,\n        state: this.state,\n        country: this.country\n      });\n      setTimeout(() => {\n        this.cityCode = this.getCityCode[0];\n        this.weather({\n          city: this.cityCode,\n          unit: this.units\n        });\n        this.forecast({\n          city: this.cityCode,\n          unit: this.units\n        });\n      }, 500);\n    },\n    searchMetric() {\n      let str = this.input\n        .toLowerCase()\n        .split(' ')\n        .map((word) => word[0].toUpperCase() + word.substr(1))\n        .join(' ');\n      this.city = str;\n      this.units = 'metric';\n\n      this.addCity({\n        city: this.city,\n        state: this.state,\n        country: this.country\n      });\n\n      setTimeout(() => {\n        this.cityCode = this.getCityCode[0];\n        this.weather({\n          city: this.cityCode,\n          unit: this.units\n        });\n        this.forecast({\n          city: this.cityCode,\n          unit: this.units\n        });\n      }, 500);\n    },\n    clearCity() {\n      this.input = null;\n    },\n    toggleStateDropdown() {\n      this.activeStateDropdown === false\n        ? (this.activeStateDropdown = true)\n        : (this.activeStateDropdown = false);\n    },\n    toggleCountryDropdown() {\n      this.activeCountryDropdown === false\n        ? (this.activeCountryDropdown = true)\n        : (this.activeCountryDropdown = false);\n    },\n    selectStateDropdownItem(state) {\n      this.states.map((item) => (item.isActive = false));\n      state.isActive = true;\n      this.state = state.abbreviation;\n      this.stateDropdownText = state.name;\n      this.country = null;\n      this.countryDropdownText = 'Select Country';\n    },\n    selectCountryDropdownItem(country) {\n      this.countries.map((item) => (item.isActive = false));\n      country.isActive = true;\n      this.country = country.abbreviation;\n      this.countryDropdownText = country.name;\n      this.state = null;\n      this.stateDropdownText = 'Select State';\n    },\n    stateCase(state) {\n      return state\n        .toLowerCase()\n        .split(' ')\n        .map((word) => word[0].toUpperCase() + word.substr(1))\n        .join(' ');\n    }\n  }\n};\n</script>\n\n<style scoped>\n.flex-container {\n  display: flex;\n  justify-content: center;\n}\n#input {\n  margin: 0.5em;\n}\n.dropdown-container {\n  display: flex;\n  justify-content: center;\n  margin: 1em;\n}\n#dropdown-flex {\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  height: 40em;\n}\n#icon {\n  padding-left: 0.5em;\n}\n</style>\n"]}]}